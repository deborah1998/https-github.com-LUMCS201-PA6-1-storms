
Function Name:read_file
Purpose: get a valid file from the user
Parameters:none
Return:filename
Algorithm:
1.) Import os
2.)Ask the user to input a valid filename
3.) While the file does not exist
    a.Ask the user to enter a valid filename
4.)return filename


Function Name:process_file
Purpose:To read from the file
Parameters:filename
Return:storm list
Algorithm:
1.)try
2.)create an empty list
3.)open the file that the user inputs
4.)for every line in the file
    a.split line at the comma
    b.append line to the empty list
5.)close the input file
6.)except an error
    a.)output "Sorry File Not Found"
    b.)end the program
7.)return the list

Function Name:storm_graph
Purpose:To generate a graph for the storms per month
Parameters:storm list
Return:graph
Algorithm:
1.) Import pylab
2.)open the file
3.)create an empty list for x and y axis
4.)jan_count = 0
5.)feb_count = 0
6.)mar_count = 0
7.)apr_count = 0
8.)may_count = 0
9.)jun_count = 0
10.)jul_count = 0
11.)aug_count = 0
12.)sep_count = 0
13.)oct_count = 0
14.)nov_count = 0
15.)dec_count = 0
16.)for line in list
    a.if index 0 [4:5] == 01
        i.jan_count += 1
    a.if index 0 [4:5] == 02
        i.feb_count += 1
    a.if index 0 [4:5] == 03
        i.mar_count += 1
    a.if index 0 [4:5] == 04
        i.apr_count += 1
    a.if index 0 [4:5] == 05
        i.may_count += 1
    a.if index 0 [4:5] == 06
        i.jun_count += 1
    a.if index 0 [4:5] == 07
        i.jul_count += 1
    a.if index 0 [4:5] == 08
        i.aug_count += 1
    a.if index 0 [4:5] == 09
        i.sep_count += 1
    a.if index 0 [4:5] == 10
        i.oct_count += 1
    a.if index 0 [4:5] == 11
        i.nov_count += 1
    a.if index 0 [4:5] == 12
        i.dec_count += 1
    a.append x at index 0 [4:5]
    b.append y
17.)close the file
18.)Plot x and y
19.)Label x, y axis and title
20.)Save the graph

Function Name:storm_years
Purpose:Do more storms happen in some years than others
Parameters:storm list
Return:
Algorithm:

1.)Ask the user for a new file to input
2.)call the process_file function for the user's new file(read from the new file)
3.)open the output file
4.)for line in file 1
5.)for line in new file
    5.)for i in range of the length of storms list
    a.)if storm _list1[0][0:4] equals storms list2[0][0:4] (the first first four letters in the index to get the year)
    b.)print storms list[0][0:4] to the file(the storm in the specific year from both files)
6.)close the output file




Function Name:common_storm
Purpose:What is the most common storm for a particular state?
Parameters:storm list, given_state
Return:most common storm
Algorithm:
1.)for i in list
    a.create an empty dictionary (storm_dict)
    a.if storm_list[5] == given_state
        i. if word is in dictionary
            1. add to dictionary with value 1
    c.
    d. return storm_dict

Function Name:injuries_state
Purpose:How many injuries in a specific state
Parameters:storm list, given_state
Return:how many injuries
Algorithm:
1.)Ask user or a state
2.)total_injuries = 0
2.) if given_state == storm_list[6]
        a.for i in storm_list:
            i.total_injuries += storm_list[i][8]
4.)output total_injuries

